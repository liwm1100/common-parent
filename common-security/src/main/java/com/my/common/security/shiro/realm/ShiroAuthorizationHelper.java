package com.my.common.security.shiro.realm;import com.my.common.cache.RedisCache;import com.my.common.util.GlobalUtil;import com.my.common.util.SpringContextUtil;import org.apache.shiro.authz.AuthorizationInfo;import org.apache.shiro.cache.Cache;/** * Created by huqilong on 2017/6/18. */public class ShiroAuthorizationHelper {    /**     * 清除某个用户的授权信息     * @param userName     */    public static void clearAuthorizationInfo(String userName){        UserRealm userRealm =  (UserRealm) SpringContextUtil.getBean("userRealm");        Cache<Object,AuthorizationInfo> cache = userRealm.getAuthorizationCache();        cache.remove(userName);        //清除左侧与顶部菜单缓存        Long userId = GlobalUtil.getCurrentUserInfo().getUserId();        try {            //RedisCache.delete("com:my:commons:sys:tree:"+userId);            //RedisCache.delete("com:my:commons:apps:"+userId);            RedisCache.deleteByPattren("com:my:commons:sys:tree:*");            RedisCache.deleteByPattren("com:my:commons:apps:*");        } catch (Exception e) {            e.printStackTrace();        }    }    /**     * 清除所有用户的授权缓存信息     */    public static void clearAllAuthorizationInfo(){        UserRealm userRealm =  (UserRealm) SpringContextUtil.getBean("userRealm");        Cache<Object,AuthorizationInfo> cache = userRealm.getAuthorizationCache();        cache.clear();        //清除左侧与顶部菜单缓存        try {            RedisCache.deleteByPattren("com:my:commons:sys:tree:*");            RedisCache.deleteByPattren("com:my:commons:apps:*");        } catch (Exception e) {            e.printStackTrace();        }    }}